{ parameter
    (or (or (or (address %addAdministrator)
                (pair %balance_of
                   (list %requests (pair (address %owner) (nat %token_id)))
                   (contract %callback
                      (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))))
            (or (pair %buy (pair (nat %quantity) (address %seller)) (nat %token_id))
                (pair %mint
                   (pair (pair (bytes %description) (bytes %ipfsUrl)) (bytes %name) (nat %quantity))
                   (bytes %symbol)
                   (nat %token_id))))
        (or (or (pair %sell (pair (nat %price) (nat %quantity)) (nat %token_id))
                (list %transfer
                   (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))))
            (list %update_operators
               (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                   (pair %remove_operator (address %owner) (address %operator) (nat %token_id)))))) ;
  storage
    (pair (pair (pair (set %administrators address) (big_map %ledger (pair address nat) nat))
                (big_map %metadata string bytes)
                (map %offers (pair address nat) (pair (nat %price) (nat %quantity))))
          (pair (big_map %operators (pair address address) (set nat))
                (set %owner_token_ids (pair address nat)))
          (set %token_ids nat)
          (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))) ;
  code { LAMBDA
           address
           unit
           { PUSH string "The sender can only manage operators for his own token" ;
             SENDER ;
             DIG 2 ;
             COMPARE ;
             EQ ;
             IF { DROP ; UNIT } { FAILWITH } } ;
         LAMBDA
           (pair (lambda address unit)
                 (pair (pair (big_map (pair address address) (set nat)) address) address nat))
           (big_map (pair address address) (set nat))
           { UNPAIR ;
             SWAP ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP ;
             DUP 5 ;
             COMPARE ;
             EQ ;
             IF { SWAP ; DIG 3 ; DIG 4 ; DROP 4 }
                { DUP 4 ;
                  DIG 5 ;
                  SWAP ;
                  EXEC ;
                  DROP ;
                  DUP 3 ;
                  DUP 2 ;
                  DUP 6 ;
                  PAIR ;
                  GET ;
                  IF_NONE { EMPTY_SET nat } {} ;
                  DIG 2 ;
                  PUSH bool True ;
                  SWAP ;
                  UPDATE ;
                  DIG 2 ;
                  SWAP ;
                  SOME ;
                  DIG 2 ;
                  DIG 3 ;
                  PAIR ;
                  UPDATE } } ;
         DUP 2 ;
         APPLY ;
         LAMBDA
           (pair (pair (big_map (pair address nat) nat) address) nat)
           nat
           { UNPAIR ; UNPAIR ; DUG 2 ; PAIR ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (pair (big_map (pair address nat) nat) address) nat nat)
           (big_map (pair address nat) nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUG 2 ;
             SOME ;
             DIG 2 ;
             DIG 3 ;
             PAIR ;
             UPDATE } ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (big_map (pair address nat) nat) address) nat nat)
                          (big_map (pair address nat) nat))
                       (lambda (pair (pair (big_map (pair address nat) nat) address) nat) nat))
                 (pair (pair (big_map (pair address nat) nat) address) nat nat))
           (big_map (pair address nat) nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP ;
             DUP 5 ;
             DUP 5 ;
             PAIR ;
             PAIR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             PUSH string "FA2_INSUFFICIENT_BALANCE" ;
             DUP 4 ;
             DUP 3 ;
             COMPARE ;
             GE ;
             IF { DROP } { FAILWITH } ;
             DIG 2 ;
             SWAP ;
             SUB ;
             ABS ;
             SWAP ;
             PAIR ;
             DUG 2 ;
             PAIR ;
             PAIR ;
             EXEC } ;
         DUP 3 ;
         DUP 3 ;
         PAIR ;
         APPLY ;
         LAMBDA
           (pair (pair (lambda
                          (pair (pair (big_map (pair address nat) nat) address) nat nat)
                          (big_map (pair address nat) nat))
                       (lambda (pair (pair (big_map (pair address nat) nat) address) nat) nat))
                 (pair (pair (big_map (pair address nat) nat) address) nat nat))
           (big_map (pair address nat) nat)
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP ;
             DUP 5 ;
             DUP 5 ;
             PAIR ;
             PAIR ;
             DIG 6 ;
             SWAP ;
             EXEC ;
             DIG 2 ;
             ADD ;
             SWAP ;
             PAIR ;
             DUG 2 ;
             PAIR ;
             PAIR ;
             EXEC } ;
         DUP 4 ;
         DUP 4 ;
         PAIR ;
         APPLY ;
         DIG 2 ;
         DROP ;
         LAMBDA
           (pair (pair (pair (pair (big_map (pair address nat) nat) (big_map string bytes))
                             (big_map (pair address address) (set nat))
                             (set (pair address nat)))
                       (set nat)
                       (big_map nat (pair nat (map string bytes))))
                 nat)
           unit
           { UNPAIR ;
             CDR ;
             CDR ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { DROP } ;
             UNIT } ;
         DIG 6 ;
         UNPAIR ;
         IF_LEFT
           { DIG 6 ;
             DIG 7 ;
             DROP 2 ;
             IF_LEFT
               { DIG 3 ;
                 DIG 4 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     DUP 2 ;
                     CAR ;
                     CAR ;
                     CAR ;
                     SENDER ;
                     MEM ;
                     IF { DUP 2 ;
                          DUP 3 ;
                          CAR ;
                          DUP ;
                          CAR ;
                          DIG 4 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          DIG 4 ;
                          PUSH bool True ;
                          SWAP ;
                          UPDATE ;
                          UPDATE 1 ;
                          UPDATE 1 ;
                          UPDATE 1 ;
                          NIL operation ;
                          PAIR }
                        { DROP 2 ; PUSH string "Unauthorized" ; FAILWITH } }
                   { DUP 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     UNPAIR ;
                     MAP { DUP ;
                           UNPAIR ;
                           DUP 2 ;
                           DUP 6 ;
                           PAIR ;
                           DUP 8 ;
                           SWAP ;
                           EXEC ;
                           DROP ;
                           DUP 5 ;
                           CAR ;
                           CAR ;
                           CAR ;
                           PAIR ;
                           PAIR ;
                           DUP 7 ;
                           SWAP ;
                           EXEC ;
                           SWAP ;
                           PAIR } ;
                     DIG 4 ;
                     DIG 5 ;
                     DROP 2 ;
                     SWAP ;
                     PUSH mutez 0 ;
                     DIG 2 ;
                     TRANSFER_TOKENS ;
                     SWAP ;
                     NIL operation ;
                     DIG 2 ;
                     CONS ;
                     PAIR ;
                     DUP 2 ;
                     DIG 2 ;
                     CAR ;
                     DUP ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     UPDATE 2 ;
                     UPDATE 2 ;
                     UPDATE 2 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     UPDATE 2 ;
                     SWAP ;
                     CAR ;
                     PAIR } }
               { DIG 2 ;
                 DIG 5 ;
                 DROP 2 ;
                 IF_LEFT
                   { UNPAIR ;
                     UNPAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CDR ;
                     DUP 4 ;
                     DUP 4 ;
                     PAIR ;
                     GET ;
                     IF_NONE
                       { DROP 6 ; PUSH string "Token not found" ; FAILWITH }
                       { PUSH mutez 1 ;
                         DUP 2 ;
                         CAR ;
                         MUL ;
                         AMOUNT ;
                         COMPARE ;
                         LT ;
                         IF { DROP 7 ; PUSH string "Amount sent is not enough" ; FAILWITH }
                            { DUP 3 ;
                              CONTRACT unit ;
                              IF_NONE { PUSH string "Contract not found" ; FAILWITH } {} ;
                              PUSH mutez 1 ;
                              DUP 3 ;
                              CAR ;
                              MUL ;
                              UNIT ;
                              TRANSFER_TOKENS ;
                              DUP 3 ;
                              DUP 6 ;
                              PAIR ;
                              DUP 5 ;
                              DUP 8 ;
                              CAR ;
                              CAR ;
                              CDR ;
                              PAIR ;
                              PAIR ;
                              DIG 8 ;
                              SWAP ;
                              EXEC ;
                              DUP 4 ;
                              DUP 7 ;
                              PAIR ;
                              SOURCE ;
                              DIG 2 ;
                              PAIR ;
                              PAIR ;
                              DIG 7 ;
                              SWAP ;
                              EXEC ;
                              DUP 3 ;
                              DIG 4 ;
                              DIG 4 ;
                              CDR ;
                              SUB ;
                              ABS ;
                              UPDATE 2 ;
                              DUP 6 ;
                              DUP 7 ;
                              CAR ;
                              DUP ;
                              CDR ;
                              DUP 9 ;
                              CAR ;
                              CDR ;
                              CDR ;
                              DIG 4 ;
                              SOME ;
                              DUP 9 ;
                              DIG 8 ;
                              PAIR ;
                              UPDATE ;
                              UPDATE 2 ;
                              UPDATE 2 ;
                              UPDATE 1 ;
                              DUP ;
                              CAR ;
                              DUP ;
                              CAR ;
                              DIG 3 ;
                              UPDATE 2 ;
                              UPDATE 1 ;
                              UPDATE 1 ;
                              DUP ;
                              CDR ;
                              DUP ;
                              CAR ;
                              DIG 5 ;
                              CDR ;
                              CAR ;
                              CDR ;
                              DIG 5 ;
                              SOURCE ;
                              PAIR ;
                              PUSH bool True ;
                              SWAP ;
                              UPDATE ;
                              UPDATE 2 ;
                              UPDATE 1 ;
                              UPDATE 2 ;
                              NIL operation ;
                              DIG 2 ;
                              CONS ;
                              PAIR } } }
                   { DIG 2 ;
                     DIG 3 ;
                     DROP 2 ;
                     UNPAIR ;
                     UNPAIR ;
                     UNPAIR ;
                     DIG 2 ;
                     UNPAIR ;
                     DIG 4 ;
                     UNPAIR ;
                     PUSH nat 0 ;
                     DUP 5 ;
                     COMPARE ;
                     EQ ;
                     IF { DROP 7 ; PUSH string "Quantity must be greater than 0" ; FAILWITH }
                        { DUP 7 ;
                          CAR ;
                          CAR ;
                          CAR ;
                          SENDER ;
                          MEM ;
                          NOT ;
                          IF { DROP 7 ; PUSH string "Unauthorized" ; FAILWITH }
                             { DUP 7 ;
                               DUP 8 ;
                               CAR ;
                               DUP ;
                               CAR ;
                               DUP 10 ;
                               CAR ;
                               CAR ;
                               CDR ;
                               DIG 7 ;
                               DUP 7 ;
                               SENDER ;
                               PAIR ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 2 ;
                               UPDATE 1 ;
                               UPDATE 1 ;
                               DUP ;
                               CAR ;
                               DUP ;
                               CDR ;
                               EMPTY_BIG_MAP string bytes ;
                               PUSH bytes
                                    0x7b0a202020202020226e616d65223a22416d656e6f20464132204e4654204d61726b6574706c616365222c0a202020202020226465736372697074696f6e223a22416d656e6f20464132206e6674206d61726b6574706c616365222c0a2020202020202276657273696f6e223a22302e302e31222c0a202020202020226c6963656e7365223a7b226e616d65223a224d4954227d2c0a20202020202022617574686f7273223a5b22416d656e6f3c636f6e7461637440616d656e6f2e6465763e225d2c0a20202020202022686f6d6570616765223a2268747470733a2f2f616d656e6f2e706f632d696e6e6f766174696f6e2e66722f222c0a20202020202022736f75726365223a7b0a202020202020202022746f6f6c73223a5b224c69676f225d2c0a2020202020202020226c6f636174696f6e223a2268747470733a2f2f6769746875622e636f6d2f6c69676f6c616e672f636f6e74726163742d636174616c6f6775652f747265652f6d61696e2f6c69622f666132220a2020202020207d2c0a20202020202022696e7465726661636573223a5b22545a49502d303132225d2c0a202020202020226572726f7273223a205b5d2c0a202020202020227669657773223a205b5d0a202020207d ;
                               SOME ;
                               PUSH string "data" ;
                               UPDATE ;
                               PUSH bytes 0x74657a6f732d73746f726167653a64617461 ;
                               SOME ;
                               PUSH string "" ;
                               UPDATE ;
                               UPDATE 1 ;
                               UPDATE 2 ;
                               UPDATE 1 ;
                               DUP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               DUP 9 ;
                               CDR ;
                               CDR ;
                               CDR ;
                               EMPTY_MAP string bytes ;
                               PUSH bytes 0x30 ;
                               SOME ;
                               PUSH string "decimals" ;
                               UPDATE ;
                               DIG 5 ;
                               SOME ;
                               PUSH string "symbol" ;
                               UPDATE ;
                               DIG 8 ;
                               SOME ;
                               PUSH string "thumbnailUri" ;
                               UPDATE ;
                               PUSH bytes 0x5b22545a49502d3132225d ;
                               SOME ;
                               PUSH string "interfaces" ;
                               UPDATE ;
                               DIG 7 ;
                               SOME ;
                               PUSH string "description" ;
                               UPDATE ;
                               DIG 6 ;
                               SOME ;
                               PUSH string "name" ;
                               UPDATE ;
                               DUP 6 ;
                               PAIR ;
                               DUP 6 ;
                               SWAP ;
                               SOME ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 2 ;
                               UPDATE 2 ;
                               UPDATE 2 ;
                               DUP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               EMPTY_BIG_MAP (pair address address) (set nat) ;
                               UPDATE 1 ;
                               UPDATE 1 ;
                               UPDATE 2 ;
                               DUP ;
                               CDR ;
                               DUP ;
                               CAR ;
                               DUP 5 ;
                               CDR ;
                               CAR ;
                               CDR ;
                               DUP 5 ;
                               SENDER ;
                               PAIR ;
                               PUSH bool True ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 2 ;
                               UPDATE 1 ;
                               UPDATE 2 ;
                               DUP ;
                               CDR ;
                               DUP ;
                               CDR ;
                               DIG 4 ;
                               CDR ;
                               CDR ;
                               CAR ;
                               DIG 4 ;
                               PUSH bool True ;
                               SWAP ;
                               UPDATE ;
                               UPDATE 1 ;
                               UPDATE 2 ;
                               UPDATE 2 ;
                               NIL operation ;
                               PAIR } } } } }
           { IF_LEFT
               { DIG 7 ;
                 DROP ;
                 IF_LEFT
                   { DIG 2 ;
                     DIG 3 ;
                     DIG 4 ;
                     DROP 3 ;
                     UNPAIR ;
                     UNPAIR ;
                     DUP 3 ;
                     SOURCE ;
                     DUP 6 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     DIG 5 ;
                     SWAP ;
                     EXEC ;
                     DUP 3 ;
                     COMPARE ;
                     GT ;
                     IF { DROP 5 ; PUSH string "Balance too low" ; FAILWITH }
                        { DUP 3 ;
                          SELF_ADDRESS ;
                          PAIR ;
                          SOURCE ;
                          DUP 6 ;
                          CDR ;
                          CAR ;
                          CAR ;
                          PAIR ;
                          PAIR ;
                          DIG 5 ;
                          SWAP ;
                          EXEC ;
                          DUP 5 ;
                          DUP 6 ;
                          CAR ;
                          DUP ;
                          CDR ;
                          DIG 7 ;
                          CAR ;
                          CDR ;
                          CDR ;
                          DIG 6 ;
                          DIG 6 ;
                          PAIR ;
                          DIG 6 ;
                          SOURCE ;
                          PAIR ;
                          SWAP ;
                          SOME ;
                          SWAP ;
                          UPDATE ;
                          UPDATE 2 ;
                          UPDATE 2 ;
                          UPDATE 1 ;
                          DUP ;
                          CDR ;
                          DUP ;
                          CAR ;
                          DIG 3 ;
                          UPDATE 1 ;
                          UPDATE 1 ;
                          UPDATE 2 ;
                          NIL operation ;
                          PAIR } }
                   { DIG 5 ;
                     DIG 6 ;
                     DROP 2 ;
                     DUP 2 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     DUP 3 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     PAIR ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     DUP 4 ;
                     CAR ;
                     CDR ;
                     CAR ;
                     DUP 5 ;
                     CAR ;
                     CAR ;
                     CDR ;
                     PAIR ;
                     PAIR ;
                     PAIR ;
                     DUP ;
                     CAR ;
                     CAR ;
                     CAR ;
                     DUP 3 ;
                     ITER { UNPAIR ;
                            DUG 2 ;
                            ITER { UNPAIR 3 ;
                                   DUP 2 ;
                                   DUP 7 ;
                                   PAIR ;
                                   DUP 10 ;
                                   SWAP ;
                                   EXEC ;
                                   DROP ;
                                   SENDER ;
                                   DUP 6 ;
                                   DUP 2 ;
                                   COMPARE ;
                                   NEQ ;
                                   IF { DUP 7 ;
                                        CAR ;
                                        CDR ;
                                        CAR ;
                                        SWAP ;
                                        DUP 7 ;
                                        PAIR ;
                                        GET ;
                                        IF_NONE { EMPTY_SET nat } {} ;
                                        DUP 3 ;
                                        MEM ;
                                        NOT ;
                                        IF { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } {} }
                                      { DROP } ;
                                   DUP 3 ;
                                   DUP 3 ;
                                   PAIR ;
                                   DUP 6 ;
                                   DIG 5 ;
                                   PAIR ;
                                   PAIR ;
                                   DUP 11 ;
                                   SWAP ;
                                   EXEC ;
                                   DIG 3 ;
                                   DIG 3 ;
                                   PAIR ;
                                   DUG 2 ;
                                   PAIR ;
                                   PAIR ;
                                   DUP 7 ;
                                   SWAP ;
                                   EXEC } ;
                            SWAP ;
                            DROP } ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 3 ;
                     DUP 2 ;
                     DIG 3 ;
                     ITER { CDR ;
                            ITER { SWAP ;
                                   DUP ;
                                   DUP 2 ;
                                   CAR ;
                                   DUP ;
                                   CDR ;
                                   DIG 3 ;
                                   CAR ;
                                   CDR ;
                                   CDR ;
                                   DUP 5 ;
                                   GET 3 ;
                                   DIG 5 ;
                                   CAR ;
                                   PAIR ;
                                   PUSH bool True ;
                                   SWAP ;
                                   UPDATE ;
                                   UPDATE 2 ;
                                   UPDATE 2 ;
                                   UPDATE 1 } } ;
                     DROP ;
                     DUP 2 ;
                     DIG 2 ;
                     CAR ;
                     DUP ;
                     CAR ;
                     DIG 3 ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     NIL operation ;
                     PAIR ;
                     DUP 2 ;
                     DIG 2 ;
                     CAR ;
                     DUP ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CAR ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     DUP ;
                     CAR ;
                     DUP ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     CDR ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CDR ;
                     UPDATE 2 ;
                     UPDATE 2 ;
                     UPDATE 2 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CAR ;
                     UPDATE 1 ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CAR ;
                     DUP 4 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     CDR ;
                     UPDATE 2 ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     DUP ;
                     CDR ;
                     DUP ;
                     CDR ;
                     DUP 4 ;
                     CDR ;
                     CDR ;
                     CAR ;
                     UPDATE 1 ;
                     UPDATE 2 ;
                     UPDATE 2 ;
                     SWAP ;
                     CAR ;
                     PAIR } }
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DIG 5 ;
                 DROP 4 ;
                 DUP 2 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 DUP 3 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 PAIR ;
                 DUP 3 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 PAIR ;
                 DUP 4 ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DUP 5 ;
                 CAR ;
                 CAR ;
                 CDR ;
                 PAIR ;
                 PAIR ;
                 PAIR ;
                 DUP ;
                 CAR ;
                 CDR ;
                 CAR ;
                 DIG 2 ;
                 SWAP ;
                 LAMBDA
                   (pair (pair (lambda
                                  (pair (pair (big_map (pair address address) (set nat)) address) address nat)
                                  (big_map (pair address address) (set nat)))
                               (lambda address unit))
                         (pair (big_map (pair address address) (set nat))
                               (or (pair address address nat) (pair address address nat))))
                   (big_map (pair address address) (set nat))
                   { UNPAIR ;
                     UNPAIR ;
                     DIG 2 ;
                     UNPAIR ;
                     SWAP ;
                     IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         DUP ;
                         GET 4 ;
                         DUP 2 ;
                         GET 3 ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         DIG 2 ;
                         PAIR ;
                         PAIR ;
                         EXEC }
                       { DIG 2 ;
                         DROP ;
                         DUP ;
                         CAR ;
                         DUP 2 ;
                         GET 3 ;
                         DUP ;
                         DUP 3 ;
                         COMPARE ;
                         EQ ;
                         IF { SWAP ; DIG 2 ; DIG 4 ; DROP 4 }
                            { DUP 2 ;
                              DIG 5 ;
                              SWAP ;
                              EXEC ;
                              DROP ;
                              DUP 4 ;
                              DIG 4 ;
                              DUP 3 ;
                              DUP 5 ;
                              PAIR ;
                              GET ;
                              IF_NONE
                                { DIG 3 ; DROP ; NONE (set nat) }
                                { DIG 4 ;
                                  GET 4 ;
                                  PUSH bool False ;
                                  SWAP ;
                                  UPDATE ;
                                  PUSH nat 0 ;
                                  DUP 2 ;
                                  SIZE ;
                                  COMPARE ;
                                  EQ ;
                                  IF { DROP ; NONE (set nat) } { SOME } } ;
                              DIG 2 ;
                              DIG 3 ;
                              PAIR ;
                              UPDATE } } } ;
                 DUP 7 ;
                 DUP 7 ;
                 PAIR ;
                 APPLY ;
                 DIG 5 ;
                 DIG 6 ;
                 DROP 2 ;
                 SWAP ;
                 DIG 2 ;
                 ITER { SWAP ; PAIR ; DUP 2 ; SWAP ; EXEC } ;
                 SWAP ;
                 DROP ;
                 SWAP ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DIG 3 ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 NIL operation ;
                 PAIR ;
                 DUP 2 ;
                 DIG 2 ;
                 CAR ;
                 DUP ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CAR ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 DUP ;
                 CAR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CAR ;
                 CDR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 CDR ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CAR ;
                 UPDATE 1 ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CAR ;
                 DUP 4 ;
                 CDR ;
                 CAR ;
                 CDR ;
                 CDR ;
                 UPDATE 2 ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 DUP ;
                 CDR ;
                 DUP ;
                 CDR ;
                 DUP 4 ;
                 CDR ;
                 CDR ;
                 CAR ;
                 UPDATE 1 ;
                 UPDATE 2 ;
                 UPDATE 2 ;
                 SWAP ;
                 CAR ;
                 PAIR } } } }

